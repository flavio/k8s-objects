// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	apimachinery_pkg_apis_meta_v1 "github.com/kubewarden/k8s-objects/apimachinery/pkg/apis/meta/v1"
)

// LeaseSpec LeaseSpec is a specification of a Lease.
//
// swagger:model LeaseSpec
type LeaseSpec struct {

	// acquireTime is a time when the current lease was acquired.
	AcquireTime *apimachinery_pkg_apis_meta_v1.MicroTime `json:"acquireTime,omitempty"`

	// holderIdentity contains the identity of the holder of a current lease. If Coordinated Leader Election is used, the holder identity must be equal to the elected LeaseCandidate.metadata.name field.
	HolderIdentity string `json:"holderIdentity,omitempty"`

	// leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measured against the time of last observed renewTime.
	LeaseDurationSeconds int32 `json:"leaseDurationSeconds,omitempty"`

	// leaseTransitions is the number of transitions of a lease between holders.
	LeaseTransitions int32 `json:"leaseTransitions,omitempty"`

	// PreferredHolder signals to a lease holder that the lease has a more optimal holder and should be given up. This field can only be set if Strategy is also set.
	PreferredHolder string `json:"preferredHolder,omitempty"`

	// renewTime is a time when the current holder of a lease has last updated the lease.
	RenewTime *apimachinery_pkg_apis_meta_v1.MicroTime `json:"renewTime,omitempty"`

	// Strategy indicates the strategy for picking the leader for coordinated leader election. If the field is not specified, there is no active coordination for this lease. (Alpha) Using this field requires the CoordinatedLeaderElection feature gate to be enabled.
	Strategy string `json:"strategy,omitempty"`
}
